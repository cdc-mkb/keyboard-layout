on: [push, pull_request, workflow_dispatch]

name: Build

defaults:
  run:
    working-directory: ./src_zmk

jobs:
  ferris_sweep_elite_c:
    runs-on: ubuntu-latest
    name: Elite-C for Ferris Sweep

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: ecursive
      - name: Install dependencies for qmk build
        uses: mstksg/get-package@v1
        with:
          apt-get: git python3-pip
      - name: Install qmk using pip
        run: python3 -m pip install --user qmk
      - name: Prepare qmk_firmware folder
        working-directory: ./qmk_firmware
        run: |
          mkdir -p keyboards/ferris/sweep/keymaps
          ln -s ../elite_c/ferris_sweep keyboards/ferris/sweep/keymaps/karl
      - name: Build ferris firmware
        working-directory: ./qmk_firmware
        run: |
          pwd
          make ferris/sweep:karl
      - name: Archive (Ferris Sweep)
        uses: actions/upload-artifact@v2
        with:
          name: elite_c_ferris_sweep
          path: qmk_firmware/ferris_sweep_karl.hex 


  a_dux:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:2.5
    name: Nice!Nano V2 for a.dux
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache west modules
        uses: actions/cache@v2
        env:
          cache-name: cache-zephyr-modules
        with:
          path: |
            src_zmk/modules/
            src_zmk/tools/
            src_zmk/zephyr/
            src_zmk/bootloader/
            src_zmk/zmk/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('src_zmk/manifest-dir/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: West Init
        run: west init -l config
      - name: West Update
        run: west update
      - name: West Zephyr export
        run: west zephyr-export
      - name: West Build (A. Dux Left)
        run: west build -s zmk/app -b nice_nano_v2 -- -DSHIELD=a_dux_left -DZMK_CONFIG="${GITHUB_WORKSPACE}/src_zmk/config"
      - name: A. Dux DTS File
        if: ${{ always() }}
        run: cat -n build/zephyr/nice_nano_v2.dts.pre.tmp
      - name: A. Dux Left Kconfig file
        run: cat build/zephyr/.config | grep -v "^#" | grep -v "^$"
      - name: Rename zmk.uf2
        run: cp build/zephyr/zmk.uf2 a_dux_left_nice_nano_v2.uf2
      - name: Archive (A. Dux Left)
        uses: actions/upload-artifact@v2
        with:
          name: firmware
          path: src_zmk/a_dux_left_nice_nano_v2.uf2
      - name: West Build (A. Dux Right)
        run: west build --pristine -s zmk/app -b nice_nano_v2 -- -DSHIELD=a_dux_right -DZMK_CONFIG="${GITHUB_WORKSPACE}/src_zmk/config"

      - name: A. Dux Right Kconfig file
        run: cat build/zephyr/.config | grep -v "^#" | grep -v "^$"
      - name: Rename zmk.uf2
        run: cp build/zephyr/zmk.uf2 a_dux_right_nice_nano_v2.uf2
      - name: Archive (A. Dux Right)
        uses: actions/upload-artifact@v2
        with:
          name: firmware
          path: src_zmk/a_dux_right_nice_nano_v2.uf2
