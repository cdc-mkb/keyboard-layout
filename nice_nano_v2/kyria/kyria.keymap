/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

/*
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │ ^ │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ ß │ ´ │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │ Q │ W │ E │ R │ T │ Z │ U │ I │ O │ P │ Ü │ + │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │ A │ S │ D │ F │ G │ H │ J │ K │ L │ Ö │ Ä │ # │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ < │ Y │ X │ C │ V │ B │ N │ M │ , │ . │ - │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_CIRC GRAVE // ^ (dead)
#define DE_SS   MINUS // ß
#define DE_ACUT EQUAL // ´ (dead)

// Row 2
#define DE_Q    Q            // Q
#define DE_W    W            // W
#define DE_E    E            // E
#define DE_R    R            // R
#define DE_T    T            // T
#define DE_Z    Y            // Z
#define DE_U    U            // U
#define DE_I    I            // I
#define DE_O    O            // O
#define DE_P    P            // P
#define DE_UDIA LEFT_BRACKET // Ü
#define DE_PLUS RIGHT_BRACKET // +

// Row 3
#define DE_A    A            // A
#define DE_S    S            // S
#define DE_D    D            // D
#define DE_F    F            // F
#define DE_G    G            // G
#define DE_H    H            // H
#define DE_J    J            // J
#define DE_K    K            // K
#define DE_L    L            // L
#define DE_ODIA SEMICOLON    // Ö
#define DE_ADIA SINGLE_QUOTE // Ä
#define DE_HASH NON_US_HASH  // #

// Row 4
#define DE_LABK NON_US_BACKSLASH // <
#define DE_Y    Z                // Y
#define DE_X    X                // X
#define DE_C    C                // C
#define DE_V    V                // V
#define DE_B    B                // B
#define DE_N    N                // N
#define DE_M    M                // M
#define DE_COMM COMMA            // ,
#define DE_DOT  PERIOD           // .
#define DE_MINS SLASH            // -

/* Shifted symbols
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │ ° │ ! │ " │ § │ $ │ % │ & │ / │ ( │ ) │ = │ ? │ ` │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │   │   │   │   │   │   │   │   │   │   │   │ * │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │   │   │   │   │   │   │   │   │   │   │   │ ' │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ > │   │   │   │   │   │   │   │ ; │ : │ _ │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_DEG  LS(DE_CIRC) // °
#define DE_EXLM LS(NUMBER_1)    // !
#define DE_DQUO LS(NUMBER_2)    // "
#define DE_SECT LS(NUMBER_3)    // §
#define DE_DLR  LS(NUMBER_4)    // $
#define DE_PERC LS(NUMBER_5)    // %
#define DE_AMPR LS(NUMBER_6)    // &
#define DE_SLSH LS(NUMBER_7)    // /
#define DE_LPRN LS(NUMBER_8)    // (
#define DE_RPRN LS(NUMBER_9)    // )
#define DE_EQL  LS(NUMBER_0)    // =
#define DE_QUES LS(DE_SS)   // ?
#define DE_GRV  LS(DE_ACUT) // ` (dead)
// Row 2
#define DE_ASTR LS(DE_PLUS) // *
// Row 3
#define DE_QUOT LS(DE_HASH) // '
// Row 4
#define DE_RABK LS(DE_LABK) // >
#define DE_SCLN LS(DE_COMM) // ;
#define DE_COLN LS(DE_DOT)  // :
#define DE_UNDS LS(DE_MINS) // _

/* Alted symbols
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │ „ │ ¡ │ “ │ ¶ │ ¢ │ [ │ ] │ | │ { │ } │ ≠ │ ¿ │   │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │ « │ ∑ │ € │ ® │ † │ Ω │ ¨ │ ⁄ │ Ø │ π │ • │ ± │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │ Å │ ‚ │ ∂ │ ƒ │ © │ ª │ º │ ∆ │ @ │ Œ │ Æ │ ‘ │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ ≤ │ ¥ │ ≈ │ Ç │ √ │ ∫ │ ~ │ µ │ ∞ │ … │ – │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_LBRC LA(NUMBER_5)    // [
#define DE_RBRC LA(NUMBER_6)    // ]
#define DE_PIPE LA(NUMBER_7)    // |
#define DE_LCBR LA(NUMBER_8)    // {
#define DE_RCBR LA(NUMBER_9)    // }
#define DE_AT LA(DE_L)    // @
#define DE_EURO LA(DE_E)    // €
#define DE_TILD LA(DE_N)    // ~

/* Shift+Alted symbols
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │   │ ¬ │ ” │   │ £ │ ﬁ │   │ \ │ ˜ │ · │ ¯ │ ˙ │ ˚ │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │ » │   │ ‰ │ ¸ │ ˝ │ ˇ │ Á │ Û │   │ ∏ │   │  │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │   │ Í │ ™ │ Ï │ Ì │ Ó │ ı │   │ ﬂ │   │   │   │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ ≥ │ ‡ │ Ù │   │ ◊ │ ‹ │ › │ ˘ │ ˛ │ ÷ │ — │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_BSLS LS(LA(NUMBER_7))    // (backslash)

#define DEFAULT 0
#define ALPHA_2 1
#define SYM_ONE 2
#define SYM_TWO 3
#define NUM_ONE 4
#define NAV_ONE 5
#define NAV_TWO 6
#define FUN_ONE 7
#define FUN_TWO 8

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <300>;
    flavor = "tap-preferred";
};

&mmv {   
    time-to-max-speed-ms = <500>;
    acceleration-exponent=<2>;
};

&mwh {
    acceleration-exponent=<2>;
    time-to-max-speed-ms = <500>;
};

/ {

    behaviors {
        // START MOD MORPH
        space_back: space_back {
            compatible = "zmk,behavior-mod-morph";
            label = "space_back";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp BACKSPACE>;
            mods = <(MOD_LSFT)>;
        };

        one_escape: one_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "one_escape";
            #binding-cells = <0>;
            bindings = <&to DEFAULT>, <&kp ESCAPE>;
            mods = <(MOD_LSFT)>;
        };
        // END MOD MORPH

    };
};

#define _____ &none

/ {
    keymap {
        compatible = "zmk,keymap";

        alpha_one {
            bindings = <
            _____ &mt LALT DE_C    &mt LCTRL DE_R   &mt LSHFT DE_I   &mt LGUI DE_E    _____                               _____       &mt LGUI DE_N &mt LSHFT DE_T &mt LCTRL DE_S &mt LALT DE_H _____
            _____ &lt FUN_ONE DE_O &lt NAV_ONE DE_L &lt NUM_ONE DE_U &lt SYM_ONE DE_A _____                               _____       &kp DE_B      &kp DE_D       &kp DE_G       &kp DE_M      _____
            _____ _____            _____            _____            _____            &space_back _____ _____ _____ _____ &sl ALPHA_2 _____         _____        _____            _____         _____
                                                    _____            _____            _____       _____ _____ _____ _____ _____       _____         _____
            >;
        };


        alpha_two {
            bindings = <
            _____ &mt LALT DE_V  &mt LCTRL DE_X &mt LSHFT DE_Z &mt LGUI DE_J _____                               _____       &mt LGUI DE_P &mt LSHFT DE_F &mt LCTRL DE_K &mt LALT DE_SS _____
            _____ &kp ENTER      &kp DE_ODIA    &kp DE_UDIA    &kp DE_ADIA   _____                               _____       &kp DE_W      &kp DE_Y       &kp DE_Q       &kp DE_DOT     _____
            _____ _____          _____          _____          _____         &one_escape _____ _____ _____ _____ &kp DE_COMM _____         _____          _____          _____          _____
                                                _____          _____         _____       _____ _____ _____ _____ _____       _____         _____
            >;
        };

       sym_one {
            bindings = <
            _____ &mt LALT DE_LABK  &mt LCTRL DE_LBRC &mt LSHFT DE_LCBR &mt LGUI DE_LPRN _____                               _____       &mt LGUI DE_RPRN &mt LSHFT DE_RCBR &mt LCTRL DE_RBRC &mt LALT DE_RABK _____
            _____ &kp DE_DLR        &kp DE_SCLN       &kp DE_DQUO       &kp DE_QUOT      _____                               _____       &kp DE_EXLM      &kp DE_QUES       &kp DE_COLN       &kp DE_MINS      _____
            _____ _____             _____             _____             _____            &to DEFAULT _____ _____ _____ _____ &sl SYM_TWO _____            _____             _____             _____            _____
                                                      _____             _____            _____       _____ _____ _____ _____ _____       _____            _____
            >;
        };

       sym_two {
            bindings = <
            _____ &mt LALT DE_EURO  &mt LCTRL DE_BSLS &mt LSHFT DE_SLSH &mt LGUI DE_ASTR _____                              _____        &mt LGUI DE_PERC &mt LSHFT DE_AMPR &mt LCTRL DE_EQL &mt LALT DE_GRV _____
            _____ &kp DE_UNDS       &kp DE_TILD       &kp DE_PIPE       &kp DE_HASH      _____                              _____        &kp DE_ACUT      &kp DE_DEG        &kp DE_CIRC      &kp DE_PLUS     _____
            _____ _____             _____             _____             _____            &to DEFAULT _____ _____ _____ _____ &to SYM_ONE _____              _____           _____            _____           _____
                                                      _____             _____            _____       _____ _____ _____ _____ _____       _____              _____
            >;
        };

       num_one {
            bindings = <
            _____ &mt LALT N1 &mt LCTRL N2 &mt LSHFT N3 &mt LGUI N4 _____                               _____       &mt LGUI N7  &mt LSHFT N8 &mt LCTRL N9  &mt LALT N0   _____
            _____ &kp DE_EQL  &kp DE_PLUS  &kp DE_MINS  &kp N5      _____                               _____       &kp N6       &kp DE_ASTR  &kp DE_SLSH   &kp BACKSPACE _____
            _____ _____       _____        _____        _____       &to DEFAULT _____ _____ _____ _____ &kp DE_DOT  _____        _____        _____         _____         _____
                                           _____        _____       _____       _____ _____ _____ _____ _____       _____        _____
            >;
        };

        nav_one {
            bindings = <
            _____ &mt LALT TAB &mt LCTRL ENTER &mt LSHFT BACKSPACE &mt LGUI SPACE _____                               _____       &mt LGUI LEFT &mt LSHFT DOWN &mt LCTRL UP &mt LALT RIGHT _____
            _____ _____       _____            _____               &kp ESCAPE     _____                               _____       &kp HOME      &kp PG_DN      &kp PG_UP    &kp END        _____
            _____ _____       _____            _____               _____          &to DEFAULT _____ _____ _____ _____ &to NAV_TWO _____         _____          _____        _____          _____
                                               _____               _____          _____       _____ _____ _____ _____ _____       _____         _____
            >;
        };

        nav_two {
            bindings = <
            _____  &mwh SCROLL_LEFT &mwh SCROLL_DOWN &mwh SCROLL_UP &mwh SCROLL_RIGHT _____                               _____       &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT _____
            _____ _____             _____            &kp RCLK       &kp LCLK          _____                               _____       &kp LGUI       &kp LSHFT      &kp LCTRL    &kp LALT        _____
            _____ _____             _____            _____          _____             &to DEFAULT _____ _____ _____ _____ &to NAV_ONE _____          _____          _____        _____           _____
                                                     _____          _____             _____       _____ _____ _____ _____ _____       _____          _____
            >;
        };

        fun_one {
            bindings = <
            _____ &kp C_PREV &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP     _____                               _____       &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 _____ _____
            _____ _____      _____      &kp C_MUTE   &kp C_PLAY_PAUSE _____                               _____       _____      _____        _____        _____ _____
            _____ _____      _____      _____        _____            &to DEFAULT _____ _____ _____ _____ &to FUN_TWO _____      _____        _____        _____ _____
                                        _____        _____            _____       _____ _____ _____ _____ _____       _____      _____
            >;
        };

        fun_two {
            bindings = <
            _____ &mt LALT F1 &mt F2 C_NEXT &mt LSHFT F3 &mt LGUI F4 _____                               _____       &mt LGUI F7 &mt LSHFT F8 &mt LCTRL F9 &mt LALT F10 _____
            _____ _____       _____         _____        &kp F5      _____                               _____       &kp F6      &kp F11      &kp F12         _____     _____
            _____ _____       _____         _____        _____       &to DEFAULT _____ _____ _____ _____ &to FUN_ONE _____       _____        _____           _____     _____
                                            _____        _____       _____       _____ _____ _____ _____ _____       _____      _____
            >;
        };

    };
};