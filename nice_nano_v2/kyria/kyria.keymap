/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

/*
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │ ^ │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ ß │ ´ │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │ Q │ W │ E │ R │ T │ Z │ U │ I │ O │ P │ Ü │ + │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │ A │ S │ D │ F │ G │ H │ J │ K │ L │ Ö │ Ä │ # │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ < │ Y │ X │ C │ V │ B │ N │ M │ , │ . │ - │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_CIRC GRAVE // ^ (dead)
#define DE_SS   MINUS // ß
#define DE_ACUT EQUAL // ´ (dead)

// Row 2
#define DE_Q    Q            // Q
#define DE_W    W            // W
#define DE_E    E            // E
#define DE_R    R            // R
#define DE_T    T            // T
#define DE_Z    Y            // Z
#define DE_U    U            // U
#define DE_I    I            // I
#define DE_O    O            // O
#define DE_P    P            // P
#define DE_UDIA LEFT_BRACKET // Ü
#define DE_PLUS RIGHT_BRACKET // +

// Row 3
#define DE_A    A            // A
#define DE_S    S            // S
#define DE_D    D            // D
#define DE_F    F            // F
#define DE_G    G            // G
#define DE_H    H            // H
#define DE_J    J            // J
#define DE_K    K            // K
#define DE_L    L            // L
#define DE_ODIA SEMICOLON    // Ö
#define DE_ADIA SINGLE_QUOTE // Ä
#define DE_HASH NON_US_HASH  // #

// Row 4
#define DE_LABK NON_US_BACKSLASH // <
#define DE_Y    Z                // Y
#define DE_X    X                // X
#define DE_C    C                // C
#define DE_V    V                // V
#define DE_B    B                // B
#define DE_N    N                // N
#define DE_M    M                // M
#define DE_COMM COMMA            // ,
#define DE_DOT  PERIOD           // .
#define DE_MINS SLASH            // -

/* Shifted symbols
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │ ° │ ! │ " │ § │ $ │ % │ & │ / │ ( │ ) │ = │ ? │ ` │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │   │   │   │   │   │   │   │   │   │   │   │ * │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │   │   │   │   │   │   │   │   │   │   │   │ ' │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ > │   │   │   │   │   │   │   │ ; │ : │ _ │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_DEG  LS(DE_CIRC) // °
#define DE_EXLM LS(NUMBER_1)    // !
#define DE_DQUO LS(NUMBER_2)    // "
#define DE_SECT LS(NUMBER_3)    // §
#define DE_DLR  LS(NUMBER_4)    // $
#define DE_PERC LS(NUMBER_5)    // %
#define DE_AMPR LS(NUMBER_6)    // &
#define DE_SLSH LS(NUMBER_7)    // /
#define DE_LPRN LS(NUMBER_8)    // (
#define DE_RPRN LS(NUMBER_9)    // )
#define DE_EQL  LS(NUMBER_0)    // =
#define DE_QUES LS(DE_SS)   // ?
#define DE_GRV  LS(DE_ACUT) // ` (dead)
// Row 2
#define DE_ASTR LS(DE_PLUS) // *
// Row 3
#define DE_QUOT LS(DE_HASH) // '
// Row 4
#define DE_RABK LS(DE_LABK) // >
#define DE_SCLN LS(DE_COMM) // ;
#define DE_COLN LS(DE_DOT)  // :
#define DE_UNDS LS(DE_MINS) // _

/* Alted symbols
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │ „ │ ¡ │ “ │ ¶ │ ¢ │ [ │ ] │ | │ { │ } │ ≠ │ ¿ │   │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │ « │ ∑ │ € │ ® │ † │ Ω │ ¨ │ ⁄ │ Ø │ π │ • │ ± │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │ Å │ ‚ │ ∂ │ ƒ │ © │ ª │ º │ ∆ │ @ │ Œ │ Æ │ ‘ │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ ≤ │ ¥ │ ≈ │ Ç │ √ │ ∫ │ ~ │ µ │ ∞ │ … │ – │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_LBRC LA(NUMBER_5)    // [
#define DE_RBRC LA(NUMBER_6)    // ]
#define DE_PIPE LA(NUMBER_7)    // |
#define DE_LCBR LA(NUMBER_8)    // {
#define DE_RCBR LA(NUMBER_9)    // }
#define DE_AT LA(DE_L)    // @
#define DE_EURO LA(DE_E)    // €
#define DE_TILD LA(DE_N)    // ~

/* Shift+Alted symbols
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │   │ ¬ │ ” │   │ £ │ ﬁ │   │ \ │ ˜ │ · │ ¯ │ ˙ │ ˚ │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │ » │   │ ‰ │ ¸ │ ˝ │ ˇ │ Á │ Û │   │ ∏ │   │  │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │   │ Í │ ™ │ Ï │ Ì │ Ó │ ı │   │ ﬂ │   │   │   │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ ≥ │ ‡ │ Ù │   │ ◊ │ ‹ │ › │ ˘ │ ˛ │ ÷ │ — │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_BSLS LS(LA(NUMBER_7))    // (backslash)

#define DEFAULT 0
#define LAYER_ONE 1
#define LAYER_TWO 2
#define LAYER_THREE 3
#define LAYER_FOUR 4
#define LAYER_FIVE 5

#define NONE 0

&mt {
    tapping-term-ms = <300>;
    flavor = "tap-preferred";
};

/ {

    behaviors {
        comma_dot: comma_dot {
            compatible = "zmk,behavior-tap-dance";
            label = "comma_dot";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&mt LGUI DE_COMM>, <&kp DE_DOT>;
        };

        quotes: quotes {
            compatible = "zmk,behavior-tap-dance";
            label = "quotes";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_QUOT>, <&kp DE_DQUO>;
        };

        slashes: slashes {
            compatible = "zmk,behavior-tap-dance";
            label = "slashes";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_SLSH>, <&kp DE_BSLS>;
        };

        ques_exlm: ques_exlm{
            compatible = "zmk,behavior-tap-dance";
            label = "ques_exlm";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&mt LSHIFT DE_QUES>, <&kp DE_EXLM>;
        };

        ampr_at: ampr_at{
            compatible = "zmk,behavior-tap-dance";
            label = "ampr_at";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_AMPR>, <&kp DE_AT>;
        };
        
        x_j: x_j {
            compatible = "zmk,behavior-tap-dance";
            label = "x_j";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_X>, <&kp DE_J>;
        };

        c_v: c_v {
            compatible = "zmk,behavior-tap-dance";
            label = "c_v";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&mt LALT DE_C>, <&kp DE_V>;
        };


        h_k: h_k {
            compatible = "zmk,behavior-tap-dance";
            label = "h_k";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&mt LALT DE_H>, <&kp DE_K>;
        };

        l_z: l_z {
            compatible = "zmk,behavior-tap-dance";
            label = "v_j";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_L>, <&kp DE_Z>;
        };

        b_q: b_q {
            compatible = "zmk,behavior-tap-dance";
            label = "b_q";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_B>, <&kp DE_Q>;
        };

        d_w: d_w {
            compatible = "zmk,behavior-tap-dance";
            label = "d_w";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_D>, <&kp DE_W>;
        };

        g_y: g_y {
            compatible = "zmk,behavior-tap-dance";
            label = "g_y";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_G>, <&kp DE_Y>;
        };


        abk: abk {
            compatible = "zmk,behavior-tap-dance";
            label = "abk";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&mt LALT DE_LABK>, <&kp DE_RABK>;
        };

        brc: brc {
            compatible = "zmk,behavior-tap-dance";
            label = "brc";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&mt LSHIFT DE_LBRC>, <&kp DE_RBRC>;
        };

        prn: prn {
            compatible = "zmk,behavior-tap-dance";
            label = "prn";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&mt LGUI DE_LPRN>, <&kp DE_RPRN>;
        };
    
        cbr: cbr {
            compatible = "zmk,behavior-tap-dance";
            label = "cbr";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&mt LCTRL DE_LCBR>, <&kp DE_RCBR>;
        };

        coln_scoln: coln_scoln {
            compatible = "zmk,behavior-tap-dance";
            label = "coln_scoln";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&mt LALT DE_COLN>, <&kp DE_SCLN>;
        };

        slsh_bsls: slsh_bsls {
            compatible = "zmk,behavior-tap-dance";
            label = "slsh_bsls";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_SLSH>, <&kp DE_BSLS>;
        };

        mins_unds: mins_unds {
            compatible = "zmk,behavior-tap-dance";
            label = "mins_unds";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_MINS>, <&kp DE_UNDS>;
        };

        dlr_euro: dlr_euro {
            compatible = "zmk,behavior-tap-dance";
            label = "dlr_euro";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_DLR>, <&kp DE_EURO>;
        };

        plus_astr: plus_astr {
            compatible = "zmk,behavior-tap-dance";
            label = "plus_astr";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_PLUS>, <&kp DE_ASTR>;
        };

        grv_girc_deg: grv_girc_deg {
            compatible = "zmk,behavior-tap-dance";
            label = "grv_girc_deg";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_GRV>, <&kp DE_CIRC>, <&kp DE_DEG>;
        };

        hash_tild: hash_tild {
            compatible = "zmk,behavior-tap-dance";
            label = "hash_tild";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_HASH>, <&kp DE_TILD>;
        };

        amp_perc: amp_perc {
            compatible = "zmk,behavior-tap-dance";
            label = "amp_perc";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_AMPR>, <&kp DE_PERC>;
        };

        f1_11: f1_11 {
            compatible = "zmk,behavior-tap-dance";
            label = "f1_11";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp F1>, <&kp F11>;
        };        
        
        f2_12: f2_12 {
            compatible = "zmk,behavior-tap-dance";
            label = "f2_12";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp F2>, <&kp F12>;
        };

        adia_odia: adia_odia {
            compatible = "zmk,behavior-tap-dance";
            label = "f2_12";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_ADIA>, <&kp DE_ODIA>;
        };

        udia_ss: udia_ss {
            compatible = "zmk,behavior-tap-dance";
            label = "udia_ss";
            #binding-cells = <0>;
            tapping_term_ms = <250>;
            bindings = <&kp DE_UDIA>, <&kp DE_SS>;
        };

        space_back: space_back {
            compatible = "zmk,behavior-mod-morph";
            label = "space_back";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp BACKSPACE>;
            mods = <(MOD_LSFT)>;
        };

        // todo hyper modifier
    };

    combos {
        compatible = "zmk,combos";

        layer_one {
            timeout = <150>;
            key-positions = <28 29 >;
            bindings = <&to LAYER_ONE>;
        };

        layer_two {
            timeout = <150>;
            key-positions = <16 29 >;
            bindings = <&to LAYER_TWO>;
        };

        layer_three {
            timeout = <150>;
            key-positions = <15 29 >;
            bindings = <&to LAYER_THREE>;
        };

        layer_four {
            timeout = <150>;
            key-positions = <14 29 >;
            bindings = <&to LAYER_four>;
        };

        layer_five {
            timeout = <150>;
            key-positions = <13 29 >;
            bindings = <&to LAYER_FIVE>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        // alpha
        default_layer {
            bindings = <
            &none &none &l_z           &kp DE_U       &kp DE_A      &none                               &none         &b_q          &d_w           &g_y           &none &none
            &none &c_v  &mt LSHFT DE_R &mt LCTRL DE_I &mt LGUI DE_E &none                               &none         &mt LGUI DE_N &mt LCTRL DE_T &mt LSHFT DE_S &h_k  &none
            &none &none &x_j           &kp DE_P       &kp DE_O      &space_back &none &none &none &none &to LAYER_ONE &kp DE_F      &sk LEFT_SHIFT &kp DE_M       &none &none
                                       &none          &none         &none      &none &none &none &none  &none         &none         &none
            >;
        };

        // symbols
        layer_one {
            bindings = <
            &none &none &kp DE_AT &udia_ss   &adia_odia &none                               &none         &mins_unds       &plus_astr       &grv_girc_deg &none       &none
            &none &abk  &brc      &cbr       &prn       &none                               &none         &mt LGUI DE_COMM &mt LCTRL DE_DOT &ques_exlm    &coln_scoln &none
            &none &none &dlr_euro &hash_tild &amp_perc  &to DEFAULT &none &none &none &none &to LAYER_TWO &DE_PIPE         &slashes         &quotes       &none       &none
                                  &none      &none      &none       &none &none &none &none &none         &none            &none
            >;
        };

        // numpad
        layer_two {
            bindings = <
            &none &none            &kp DE_PERC       &kp DE_DLR        &kp DE_EURO      &none                               &none           &kp N7 &kp N8 &kp N9 &none  &none
            &none &mt LALT DE_ASTR &mt LSHFT DE_SLSH &mt LCTRL DE_PLUS &mt LGUI DE_MINS &none                               &none           &kp N4 &kp N5 &kp N6 &kp N0 &none
            &none &none            &kp DE_HASH       &kp BACKSPACE     &kp SPACE        &to DEFAULT &none &none &none &none &to LAYER_THREE &kp N1 &kp N2 &kp N3 &none  &none
                                                     &none             &none            &none       &none &none &none &none &none           &none  &none
            >;
        };

        // keyboard nav
        layer_three {
            bindings =< 
            &none &none        &none           &none               &kp ESCAPE     &none                               &none          &none           &kp END        &kp HOME     &none          &none 
            &none &mt LALT TAB &mt LSHFT ENTER &mt LCTRL BACKSPACE &mt LGUI SPACE &none                               &none          &mt LGUI LEFT   &mt LCTRL DOWN &mt LSHFT UP &mt LALT RIGHT &none
            &none &none        &none           &none               &none          &to DEFAULT &none &none &none &none &to LAYER_FOUR &none           &kp PG_DN      &kp PG_UP    &none          &none
                                               &none               &none          &none       &none &none &none &none &none          &none           &none
            >;
        };

        // mouse nav
        layer_four {
            bindings =< 
            &none &none            &none            &none          &none             &none                               &none          &kp LGUI       &kp END        &kp HOME     &none           &none 
            &none &mwh SCROLL_LEFT &mwh SCROLL_DOWN &mwh SCROLL_UP &mwh SCROLL_RIGHT &none                               &none          &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &none
            &none &none            &none            &none          &none             &to DEFAULT &none &none &none &none &to LAYER_FIVE &kp LCTRL      &kp PG_DN      &kp PG_UP    &none           &none      
                                                    &none          &none             &none       &none &none &none &none &none          &none          &none
            >;
        };

        // functions
        layer_five {
            bindings =< 
            &none &none           &bt BT_CLR       &bt BT_SEL 1       &bt BT_SEL 0      &none                               &none &kp F7 &kp F8 &kp F9 &kp F12 &none
            &none &mt LALT C_PREV &mt LSHFT C_NEXT &mt LCTRL C_VOL_DN &mt LGUI C_VOL_UP &none                               &none &kp F4 &kp F5 &kp F6 &kp F10 &none
            &none &none           &none            &kp C_PLAY_PAUSE   &kp C_MUTE        &to DEFAULT &none &none &none &none &none &f1_11 &f2_12 &kp F3 &kp F10 &none
                                                   &none              &none             &none       &none &none &none &none &none &none  &none
            >;
        };
    };
};